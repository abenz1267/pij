/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0.1/userguide/building_java_projects.html
 */


plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'jacoco'
    id "name.remal.sonarlint" version "1.3.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation(platform('org.junit:junit-bom:5.7.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.0-jre'
    implementation group: 'com.google.inject', name: 'guice', version: '5.0.1'
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.34.0'
    implementation group: 'com.j256.ormlite', name: 'ormlite-jdbc', version: '5.3'
    implementation group: 'com.j256.ormlite', name: 'ormlite-core', version: '5.3'
    implementation 'name.falgout.jeffrey.testing.junit5:guice-extension:1.2.1'
}

application {
    // Define the main class for the application.
    mainClass = 'pij.App'
}

javafx {
    version = "15.0.1"
    modules = [ 'javafx.controls', 'javafx.fxml']
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
  finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
